{"version":3,"sources":["constants/index.js","reducers/operation.js","reducers/toBegin.js","reducers/mathOperation.js","reducers/history.js","reducers/index.js","store/index.js","components/Key/index.js","actions/setOperation.js","actions/setToBegin.js","actions/setMathOperation.js","actions/setHistory.js","selectors/toBegin.js","selectors/operation.js","selectors/mathOperation.js","containers/KeyContainer.js","components/Keyboard/index.js","components/ShowOperation/index.js","containers/ShowOperationContainer.js","components/LastOperation/index.js","selectors/history.js","containers/LastOperationContainer.js","components/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["KEYS","operation","handleActions","state","action","payload","toBegin","mathOperation","history","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","reducers","Key","value","setOperation","className","onClick","createAction","setToBegin","setMathOperation","setHistory","getToBegin","getOperation","getMathOperation","KeyContainer","props","alert","slice","String","evaluate","replace","length","this","Component","mapDispatchToProps","connect","Keyboard","Grid","container","spacing","map","val","key","item","xs","ShowOperation","ShowOperationContainer","LastOperation","lastOperation","getHistory","LastOperationContainer","Home","justify","alignItems","App","Boolean","location","hostname","match","rootComponent","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.32494ed5.chunk.js","sourcesContent":["export const KEYS = [\r\n    'CE', '←', '%', '√', \r\n    '7', '8', '9', '÷', \r\n    '4', '5', '6', 'x', \r\n    '1', '2', '3', '-', \r\n    '0', ',', '=', '+'\r\n];\r\n\r\nexport const SET_OPERATION = 'SET_OPERATION';\r\nexport const SET_TO_BEGIN = 'SET_TO_BEGIN';\r\nexport const SET_MATH_OPERATION = 'SET_MATH_OPERATION';\r\nexport const SET_HISTORY = 'SET_HISTORY';","import { handleActions } from 'redux-actions';\r\nimport { SET_OPERATION } from './../constants';\r\n\r\nexport const operation = handleActions({\r\n  [SET_OPERATION]: (state, action) => action.payload\r\n}, '');","import { handleActions } from 'redux-actions';\r\nimport { SET_TO_BEGIN } from './../constants';\r\n\r\nexport const toBegin = handleActions({\r\n    [SET_TO_BEGIN]: (state, action) => action.payload\r\n}, 0);","import { handleActions } from 'redux-actions';\r\nimport { SET_MATH_OPERATION } from './../constants';\r\n\r\nexport const mathOperation = handleActions({\r\n  [SET_MATH_OPERATION]: (state, action) => action.payload\r\n}, '0')","import { handleActions } from 'redux-actions';\r\nimport { SET_HISTORY } from './../constants';\r\n\r\nexport const history = handleActions({\r\n  [SET_HISTORY]: (state, action) => action.payload\r\n}, '');","import { combineReducers } from 'redux';\r\nimport { operation } from './operation';\r\nimport { toBegin } from './toBegin';\r\nimport { mathOperation } from './mathOperation';\r\nimport { history } from './history';\r\n\r\nexport default combineReducers({\r\n  operation,\r\n  toBegin,\r\n  mathOperation,\r\n  history\r\n});","import { createStore, compose } from 'redux';\r\nimport reducers from './../reducers';\r\n\r\nconst initialState = {\r\n  operation: '0',\r\n  toBegin: 0,\r\n  mathOperation: '0',\r\n  history: '',\r\n}\r\n\r\n// To see state and redux in chrome\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nexport const store = createStore(reducers, initialState, composeEnhancers);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nconst Key = ({ value, setOperation }) => {\r\n  return (\r\n    <div className=\"divKey\" onClick={() => setOperation(value)}>\r\n      <p className=\"keyText\">\r\n        {value}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nKey.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  setOperation: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Key;","import { createAction } from 'redux-actions';\r\nimport { SET_OPERATION } from './../constants';\r\n\r\nexport const setOperation = createAction(SET_OPERATION, operation => operation);","import { createAction } from 'redux-actions';\r\nimport { SET_TO_BEGIN } from './../constants';\r\n\r\nexport const setToBegin = createAction(SET_TO_BEGIN, toBegin => toBegin);","import { createAction } from 'redux-actions';\r\nimport { SET_MATH_OPERATION } from './../constants';\r\n\r\nexport const setMathOperation = createAction(SET_MATH_OPERATION, mathOperation => mathOperation);","import { createAction } from 'redux-actions';\r\nimport { SET_HISTORY } from './../constants';\r\n\r\nexport const setHistory = createAction(SET_HISTORY, history => history);","export const getToBegin = state => state.toBegin;","export const getOperation = state => state.operation;","export const getMathOperation = state => state.mathOperation;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Key from './../components/Key';\r\nimport { setOperation } from './../actions/setOperation';\r\nimport { setToBegin } from './../actions/setToBegin';\r\nimport { setMathOperation } from './../actions/setMathOperation';\r\nimport { setHistory } from './../actions/setHistory';\r\nimport { getToBegin } from './../selectors/toBegin';\r\nimport { getOperation } from './../selectors/operation';\r\nimport { getMathOperation } from './../selectors/mathOperation';\r\nimport { evaluate } from 'mathjs';\r\n\r\nclass KeyContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  setOperation = value => {\r\n    alert('as');\r\n    const { operation, toBegin, mathOperation, setOperation, setToBegin, setMathOperation,\r\n      setHistory } = this.props;\r\n    toBegin === 0 ? setOperation(value) : \r\n      operation.slice(-1) === ',' ? setOperation(`${operation}${value}`) : \r\n        setOperation(`${operation} ${value}`);\r\n    if (value === '=') {\r\n      setHistory(operation);\r\n      setMathOperation(String(evaluate(mathOperation)));\r\n      setOperation(String(evaluate(mathOperation)).replace('.', ','));\r\n    } else if (value === 'CE') {\r\n      setToBegin(0);\r\n      setMathOperation('0');\r\n      setOperation('0');\r\n    } else if (value === '←' ) {\r\n      if (operation.length > 1) {\r\n        setOperation(operation.slice(0, -2));\r\n        setMathOperation(mathOperation.slice(0, -1));\r\n      } else {\r\n        setOperation(operation);\r\n        setMathOperation(mathOperation);\r\n      }\r\n    } else if (value === ',') {\r\n      setOperation(`${operation}${value}`);\r\n      value = '.';\r\n      setMathOperation(`${mathOperation}${value}`);\r\n    } else {\r\n      if (value === 'x') value = '*';\r\n      if (value === '÷') value = '/';\r\n      setToBegin(1);\r\n      setMathOperation(`${mathOperation}${value}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Key \r\n          value={this.props.value}\r\n          setOperation={this.setOperation}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nKeyContainer.propTypes = {\r\n  setOperation: PropTypes.func.isRequired,\r\n  setToBegin: PropTypes.func.isRequired,\r\n  setMathOperation: PropTypes.func.isRequired,\r\n  toBegin: PropTypes.number.isRequired,\r\n  operation: PropTypes.string.isRequired,\r\n  mathOperation: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  toBegin: getToBegin(state),\r\n  operation: getOperation(state),\r\n  mathOperation: getMathOperation(state)\r\n});\r\n\r\nconst mapDispatchToProps = { setOperation, setToBegin, setMathOperation, setHistory };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport KeyContainer from './../../containers/KeyContainer';\r\nimport { KEYS } from './../../constants';\r\n\r\nconst Keyboard = () => {\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        {KEYS.map(val => (\r\n          <Grid key={val} item xs={3}>\r\n            <KeyContainer value={val} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nKeyboard.propTypes = {\r\n\r\n}\r\n\r\nexport default Keyboard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nconst ShowOperation = ({ operation }) => {\r\n  return (\r\n    <div className=\"divText\">\r\n      <p>{operation}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowOperation;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ShowOperation from './../components/ShowOperation';\r\nimport { getOperation } from './../selectors/operation';\r\n\r\nclass ShowOperationContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ShowOperation operation={this.props.operation}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nShowOperationContainer.propTypes = {\r\n  operation: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  operation: getOperation(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(ShowOperationContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nconst LastOperation = ({ lastOperation }) => {\r\n  return (\r\n    <div className=\"divTextLastOperation\">\r\n      <p>{lastOperation}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nLastOperation.propTypes = {\r\n  lastOperation: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default LastOperation;","export const getHistory = state => state.history;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport LastOperation from '../components/LastOperation';\r\nimport { getHistory } from './../selectors/history';\r\n\r\nclass LastOperationContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LastOperation lastOperation={this.props.lastOperation} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLastOperationContainer.propTypes = {\r\n  lastOperation: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lastOperation: getHistory(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(LastOperationContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Keyboard from './../Keyboard';\r\nimport ShowOperationContainer from './../../containers/ShowOperationContainer';\r\nimport LastOperationContainer from './../../containers/LastOperationContainer';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={12}>\r\n              <LastOperationContainer />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ShowOperationContainer />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Keyboard />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from './components/Home';\r\nimport './../src/style/main.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootComponent = (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(rootComponent, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}